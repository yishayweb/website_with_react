{"version":3,"sources":["actions/index.js","components/Payments/Payments.js","components/Landing/Landing.js","components/SignupForm/SignupForm.js","components/LoginForm/LoginForm.js","components/EntryPoint/EntryPoint.js","components/EntryPoint/App.js","serviceWorker.js","reducers/index.js","reducers/reducerUser.js","index.js"],"names":["SIGNUP","LOGIN","UPDATE_USER_CREDIT","signup","user_obj","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","res","wrap","_context","prev","next","axios","post","headers","Content-Type","sent","console","log","status","type","payload","data","token","push","localStorage","setItem","t0","stop","_x","apply","this","arguments","login","_ref2","_callee2","_context2","_x2","isLoggedIn","callback","_ref3","_callee3","_context3","getItem","Authorization","get","then","_ref4","catch","error","_x3","handleToken","_ref5","_callee4","_context4","_x4","Payments","_this","react_default","createElement","main_default","name","description","amount","props","stripeKey","process","className","Component","connect","actions","Landing","state","_this2","setTimeout","loginValidatorCallback","prevProps","prevState","setState","_this3","_this4","user","onClick","sendEmail","logOut","components_Payments_Payments","renderField","input","label","_ref$meta","meta","touched","assign","placeholder","SignupForm","values","handleSubmit","onSubmit","bind","Field","component","switchForm","reduxForm","form","destroyOnUnmount","withRouter","LoginForm","EntryPoint","components_LoginForm_LoginForm","components_SignupForm_SignupForm","App","react_router_dom","react_router","exact","path","Boolean","window","location","hostname","match","combineReducers","length","undefined","action","objectSpread","credit","credits","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","es","EntryPoint_App","document","querySelector","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2cb6c353.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const SIGNUP = \"signup\";\r\nexport const LOGIN = \"login\";\r\nexport const UPDATE_USER_CREDIT = \"update_user_credit\";\r\n\r\nexport const signup = (user_obj, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.post('/users', user_obj, { headers: { 'Content-Type': 'application/json' } });\r\n    console.log(res);\r\n    if (res.status === 201) {\r\n      dispatch({ type: SIGNUP, payload: res.data.token });\r\n      history.push('/home');\r\n      localStorage.setItem('user_token', res.data.token);\r\n    }\r\n  }\r\n  catch(e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nexport const login = (user_obj, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.post('/users/login', user_obj, { headers: { 'Content-Type': 'application/json' } });\r\n    console.log(res);\r\n    if (res.status === 200) {\r\n      dispatch({ type: LOGIN, payload: res.data.token });\r\n      history.push('/home');\r\n      localStorage.setItem('user_token', res.data.token);\r\n    }\r\n  }\r\n  catch(e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nexport const isLoggedIn = (callback) => async dispatch => {\r\n  console.log(localStorage.getItem('user_token'));\r\n  var headers = {headers: {'Content-Type': 'application/json', 'Authorization': 'Bearer ' + localStorage.getItem('user_token')}}\r\n\r\n  var request = axios.get('/users/me', headers);\r\n  request.then(({data, status}) => {\r\n    if (status === 200) {\r\n      console.log(data);\r\n      callback(true);\r\n    }\r\n  }).catch((error) => {\r\n    console.log(error);\r\n    callback(false);\r\n  });\r\n}\r\n\r\nexport const handleToken = token => async dispatch => {\r\n  var headers = {headers: {'Content-Type': 'application/json', 'Authorization': 'Bearer ' + localStorage.getItem('user_token')}}\r\n  const res = await axios.post('/users/stripe', token, headers);\r\n\r\n  dispatch({ type: UPDATE_USER_CREDIT, payload: res.data });\r\n};\r\n","import React, { Component } from 'react';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../actions';\r\n\r\nclass Payments extends Component {\r\n  render() {\r\n    return (\r\n      <StripeCheckout\r\n        name=\"Yishay On Web\"\r\n        description=\"$1 for 5 email credits\"\r\n        amount={100}\r\n        token={token => this.props.handleToken(token)}\r\n        stripeKey={process.env.REACT_APP_STRIPE_KEY}\r\n      >\r\n        <button className=\"btn\">\r\n          Add Credits\r\n        </button>\r\n      </StripeCheckout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, actions)(Payments);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport {\r\n  Link,\r\n  Redirect\r\n} from 'react-router-dom'\r\nimport { isLoggedIn } from '../../actions';\r\nimport Payments from '../Payments/Payments';\r\nimport './landing.css';\r\n\r\n\r\nclass Landing extends Component {\r\n  state = {isLoggedIn: \"unknown\"}\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => this.props.isLoggedIn((isLoggedIn) => this.loginValidatorCallback(isLoggedIn)), 1000);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.isLoggedIn && !this.state.isLoggedIn) {\r\n      this.props.history.push(\"/\");\r\n    }\r\n  }\r\n\r\n  loginValidatorCallback(isLoggedIn) {\r\n    if (isLoggedIn) {\r\n      this.setState ({ isLoggedIn: true });\r\n    }\r\n    else {\r\n      this.props.history.push(\"/\");\r\n    }\r\n  }\r\n\r\n  logOut() {\r\n    var headers = {headers: {'Content-Type': 'application/json', 'Authorization': 'Bearer ' + localStorage.getItem('user_token')}}\r\n\r\n    var request = axios.get('/users/logout', headers);\r\n    request.then(({data, status}) => {\r\n      if (status === 200) {\r\n        console.log(data);\r\n        this.setState({ isLoggedIn: false });\r\n        //localStorage.removeItem('user_token');\r\n      }\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  sendEmail() {\r\n    var headers = {headers: {'Content-Type': 'application/json', 'Authorization': 'Bearer ' + localStorage.getItem('user_token')}}\r\n\r\n    var request = axios.post('/users/sendEmail', {}, headers);\r\n    request.then(({data, status}) => {\r\n      if (status === 200) {\r\n        console.log(data);\r\n      }\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props.user);\r\n    if (this.state.isLoggedIn === \"unknown\") {\r\n      return (\r\n        <div className=\"landing-main-div\">\r\n          Loading...\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"landing-main-div\">\r\n        Landing\r\n        <button onClick={() => this.sendEmail()}>Send Email</button>\r\n        <button onClick={() => this.logOut()}>Log Out</button>\r\n        <Payments />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {user: state.user}\r\n}\r\n\r\nexport default connect(mapStateToProps, { isLoggedIn })(Landing);\r\n","import React, { Component } from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { connect } from 'react-redux';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { signup } from '../../actions'\r\n\r\nconst renderField = ({ input, label, type, meta: { touched, error } }) => (\r\n  <div>\r\n    <label>{label}</label>\r\n    <div>\r\n      <input {...input} type={type} placeholder={label}/>\r\n      {touched && error && <span>{error}</span>}\r\n    </div>\r\n  </div>\r\n)\r\n\r\nclass SignupForm extends Component {\r\n\r\n  onSubmit(values) {\r\n    console.log(\"submitted\");\r\n    console.log(values);\r\n    this.props.signup(values, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { handleSubmit } = this.props;\r\n    return (\r\n      <form onSubmit={handleSubmit(this.onSubmit.bind(this))}>\r\n        <Field\r\n          name=\"name\"\r\n          label=\"Name\"\r\n          type=\"text\"\r\n          component={renderField} />\r\n        <Field\r\n          name=\"email\"\r\n          label=\"Email\"\r\n          type=\"text\"\r\n          component={renderField} />\r\n        <Field\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type=\"text\"\r\n          component={renderField} />\r\n        <Field\r\n          name=\"age\"\r\n          label=\"Age\"\r\n          type=\"text\"\r\n          component={renderField} />\r\n        <div>\r\n          <button type=\"submit\" >Submit</button>\r\n          <button type=\"button\" onClick={() => this.props.switchForm()}>Login</button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps() {\r\n  return {};\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'signupForm',\r\n  destroyOnUnmount: false,\r\n})(connect(mapStateToProps, { signup })(withRouter(SignupForm)));\r\n","import React, { Component } from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { connect } from 'react-redux';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { login } from '../../actions'\r\n\r\nconst renderField = ({ input, label, type, meta: { touched, error } }) => (\r\n  <div>\r\n    <label>{label}</label>\r\n    <div>\r\n      <input {...input} type={type} placeholder={label}/>\r\n      {touched && error && <span>{error}</span>}\r\n    </div>\r\n  </div>\r\n)\r\n\r\nclass LoginForm extends Component {\r\n\r\n  onSubmit(values) {\r\n    console.log(\"submitted\");\r\n    console.log(values);\r\n    this.props.login(values, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { handleSubmit } = this.props;\r\n    return (\r\n      <form onSubmit={handleSubmit(this.onSubmit.bind(this))}>\r\n        <Field\r\n          name=\"email\"\r\n          label=\"Email\"\r\n          type=\"text\"\r\n          component={renderField} />\r\n        <Field\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type=\"text\"\r\n          component={renderField} />\r\n        <div>\r\n          <button type=\"submit\">Submit</button>\r\n          <button type=\"button\" onClick={() => this.props.switchForm()}>Signup</button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps() {\r\n  return {};\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'loginForm',\r\n  destroyOnUnmount: false,\r\n})(connect(mapStateToProps, { login })(withRouter(LoginForm)));\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport {\r\n  Link,\r\n  Redirect\r\n} from 'react-router-dom'\r\nimport { isLoggedIn } from '../../actions';\r\nimport SignupForm from '../SignupForm/SignupForm';\r\nimport LoginForm from '../LoginForm/LoginForm';\r\n\r\n\r\nclass EntryPoint extends Component {\r\n  state = {login: true}\r\n\r\n  render() {\r\n    if (this.state.login) {\r\n      return (\r\n        <LoginForm switchForm={() => this.setState({ login: false })} />\r\n      );\r\n    }\r\n    return (\r\n      <SignupForm  switchForm={() => this.setState({ login: true })} />\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {user: state.user}\r\n}\r\n\r\nexport default connect(mapStateToProps, { isLoggedIn })(EntryPoint);\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  BrowserRouter,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect\r\n} from 'react-router-dom'\r\nimport Landing from '../Landing/Landing';\r\nimport EntryPoint from './EntryPoint';\r\n\r\nclass App extends Component {\r\n\r\n  onButtonClick() {\r\n    var token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZDc3YTI1ZjFkODFiYjJmMjAyODFiYWYiLCJpYXQiOjE1NjgxMjE0Mzl9._zZzaepxO2ddT8MELCJ4Mm6V9wvfniosg042xyFEPUE\"\r\n\r\n    var headers = {headers: {'Content-Type': 'application/json', 'Authorization': 'Bearer ' + token}}\r\n\r\n    var request = axios.get('/users/me', headers);\r\n    request.then(({data, status}) => {\r\n      if (status === 200) {\r\n        console.log(data);\r\n      }\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <BrowserRouter>\r\n          <div>\r\n            <Route exact path=\"/\" component={EntryPoint} />\r\n            <Route exact path=\"/home\" component={Landing} />\r\n          </div>\r\n        </BrowserRouter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\r\nimport reducerUser from './reducerUser';\r\nimport { reducer as reduxForm } from 'redux-form';\r\n\r\nexport default combineReducers({\r\n  user: reducerUser,\r\n  form: reduxForm\r\n});\r\n","import { SIGNUP, LOGIN, UPDATE_USER_CREDIT } from \"../actions\";\r\n\r\nexport default function(state = {}, action) {\r\n  switch (action.type) {\r\n    case SIGNUP:\r\n      return {...state, token: action.payload}\r\n    case LOGIN:\r\n      return {...state, token: action.payload}\r\n    case UPDATE_USER_CREDIT:\r\n      return {...state, credit: action.payload.credits}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport App from './components/EntryPoint/App';\nimport * as serviceWorker from './serviceWorker';\nimport reducers from './reducers';\n\n\n//ReactDOM.render(<App />, document.getElementById('root'));\n\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n  <Provider store={store}><App /></Provider>,\n  document.querySelector('#root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}