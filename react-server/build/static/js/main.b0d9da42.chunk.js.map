{"version":3,"sources":["actions/index.js","components/Landing/Landing.js","components/SignupForm/SignupForm.js","components/LoginForm/LoginForm.js","components/EntryPoint/EntryPoint.js","components/EntryPoint/App.js","serviceWorker.js","reducers/index.js","reducers/reducerUser.js","index.js"],"names":["signup","user_obj","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","res","wrap","_context","prev","next","axios","post","headers","Content-Type","sent","console","log","status","type","payload","data","token","push","localStorage","setItem","t0","stop","_x","apply","this","arguments","isLoggedIn","callback","_ref2","_callee2","_context2","getItem","Authorization","get","then","_ref3","catch","error","_x2","Landing","state","_this2","setTimeout","props","loginValidatorCallback","prevProps","prevState","setState","_this3","_this4","user","react_default","createElement","className","onClick","logOut","Component","connect","renderField","input","label","_ref$meta","meta","touched","assign","placeholder","SignupForm","values","_this","handleSubmit","onSubmit","bind","Field","name","component","switchForm","reduxForm","form","destroyOnUnmount","withRouter","LoginForm","EntryPoint","login","components_LoginForm_LoginForm","components_SignupForm_SignupForm","App","react_router_dom","react_router","exact","path","Boolean","window","location","hostname","match","combineReducers","length","undefined","action","objectSpread","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","es","EntryPoint_App","document","querySelector","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b0d9da42.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const SIGNUP = \"signup\";\r\n\r\nexport const signup = (user_obj, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.post('/users', user_obj, { headers: { 'Content-Type': 'application/json' } });\r\n    console.log(res);\r\n    if (res.status === 201) {\r\n      dispatch({ type: SIGNUP, payload: res.data.token });\r\n      history.push('/home');\r\n      localStorage.setItem('user_token', res.data.token);\r\n    }\r\n  }\r\n  catch(e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nexport const isLoggedIn = (callback) => async dispatch => {\r\n  console.log(localStorage.getItem('user_token'));\r\n  var headers = {headers: {'Content-Type': 'application/json', 'Authorization': 'Bearer ' + localStorage.getItem('user_token')}}\r\n\r\n  var request = axios.get('/users/me', headers);\r\n  request.then(({data, status}) => {\r\n    if (status === 200) {\r\n      console.log(data);\r\n      callback(true);\r\n    }\r\n  }).catch((error) => {\r\n    console.log(error);\r\n    callback(false);\r\n  });\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport {\r\n  Link,\r\n  Redirect\r\n} from 'react-router-dom'\r\nimport { isLoggedIn } from '../../actions';\r\nimport './landing.css';\r\n\r\n\r\nclass Landing extends Component {\r\n  state = {isLoggedIn: \"unknown\"}\r\n\r\n  componentDidMount() {\r\n    setTimeout(() => this.props.isLoggedIn((isLoggedIn) => this.loginValidatorCallback(isLoggedIn)), 1000);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.isLoggedIn && !this.state.isLoggedIn) {\r\n      this.props.history.push(\"/\");\r\n    }\r\n  }\r\n\r\n  loginValidatorCallback(isLoggedIn) {\r\n    if (isLoggedIn) {\r\n      this.setState ({ isLoggedIn: true });\r\n    }\r\n    else {\r\n      this.props.history.push(\"/\");\r\n    }\r\n  }\r\n\r\n  logOut() {\r\n    var headers = {headers: {'Content-Type': 'application/json', 'Authorization': 'Bearer ' + localStorage.getItem('user_token')}}\r\n\r\n    var request = axios.get('/users/logout', headers);\r\n    request.then(({data, status}) => {\r\n      if (status === 200) {\r\n        console.log(data);\r\n        this.setState({ isLoggedIn: false });\r\n        //localStorage.removeItem('user_token');\r\n      }\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    console.log(this.props.user);\r\n    if (this.state.isLoggedIn === \"unknown\") {\r\n      return (\r\n        <div className=\"landing-main-div\">\r\n          Loading...\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"landing-main-div\">\r\n        Landing\r\n        <button onClick={() => this.logOut()}>Log Out</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {user: state.user}\r\n}\r\n\r\nexport default connect(mapStateToProps, { isLoggedIn })(Landing);\r\n","import React, { Component } from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { connect } from 'react-redux';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { signup } from '../../actions'\r\n\r\nconst renderField = ({ input, label, type, meta: { touched, error } }) => (\r\n  <div>\r\n    <label>{label}</label>\r\n    <div>\r\n      <input {...input} type={type} placeholder={label}/>\r\n      {touched && error && <span>{error}</span>}\r\n    </div>\r\n  </div>\r\n)\r\n\r\nclass SignupForm extends Component {\r\n\r\n  onSubmit(values) {\r\n    console.log(\"submitted\");\r\n    console.log(values);\r\n    this.props.signup(values, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { handleSubmit } = this.props;\r\n    return (\r\n      <form onSubmit={handleSubmit(this.onSubmit.bind(this))}>\r\n        <Field\r\n          name=\"name\"\r\n          label=\"Name\"\r\n          type=\"text\"\r\n          component={renderField} />\r\n        <Field\r\n          name=\"email\"\r\n          label=\"Email\"\r\n          type=\"text\"\r\n          component={renderField} />\r\n        <Field\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type=\"text\"\r\n          component={renderField} />\r\n        <Field\r\n          name=\"age\"\r\n          label=\"Age\"\r\n          type=\"text\"\r\n          component={renderField} />\r\n        <div>\r\n          <button type=\"submit\" >Submit</button>\r\n          <button type=\"button\" onClick={() => this.props.switchForm()}>Login</button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps() {\r\n  return {};\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'signupForm',\r\n  destroyOnUnmount: false,\r\n})(connect(mapStateToProps, { signup })(withRouter(SignupForm)));\r\n","import React, { Component } from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { connect } from 'react-redux';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { signup } from '../../actions'\r\n\r\nconst renderField = ({ input, label, type, meta: { touched, error } }) => (\r\n  <div>\r\n    <label>{label}</label>\r\n    <div>\r\n      <input {...input} type={type} placeholder={label}/>\r\n      {touched && error && <span>{error}</span>}\r\n    </div>\r\n  </div>\r\n)\r\n\r\nclass LoginForm extends Component {\r\n\r\n  onSubmit(values) {\r\n    console.log(\"submitted\");\r\n    console.log(values);\r\n    this.props.signup(values, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { handleSubmit } = this.props;\r\n    return (\r\n      <form onSubmit={handleSubmit(this.onSubmit.bind(this))}>\r\n        <Field\r\n          name=\"email\"\r\n          label=\"Email\"\r\n          type=\"text\"\r\n          component={renderField} />\r\n        <Field\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          type=\"text\"\r\n          component={renderField} />\r\n        <div>\r\n          <button type=\"submit\">Submit</button>\r\n          <button type=\"button\" onClick={() => this.props.switchForm()}>Signup</button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps() {\r\n  return {};\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'loginForm',\r\n  destroyOnUnmount: false,\r\n})(connect(mapStateToProps, { signup })(withRouter(LoginForm)));\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport {\r\n  Link,\r\n  Redirect\r\n} from 'react-router-dom'\r\nimport { isLoggedIn } from '../../actions';\r\nimport SignupForm from '../SignupForm/SignupForm';\r\nimport LoginForm from '../LoginForm/LoginForm';\r\n\r\n\r\nclass EntryPoint extends Component {\r\n  state = {login: true}\r\n\r\n  render() {\r\n    if (this.state.login) {\r\n      return (\r\n        <LoginForm switchForm={() => this.setState({ login: false })} />\r\n      );\r\n    }\r\n    return (\r\n      <SignupForm  switchForm={() => this.setState({ login: true })} />\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {user: state.user}\r\n}\r\n\r\nexport default connect(mapStateToProps, { isLoggedIn })(EntryPoint);\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  BrowserRouter,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  Redirect\r\n} from 'react-router-dom'\r\nimport Landing from '../Landing/Landing';\r\nimport EntryPoint from './EntryPoint';\r\n\r\nclass App extends Component {\r\n\r\n  onButtonClick() {\r\n    var token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI1ZDc3YTI1ZjFkODFiYjJmMjAyODFiYWYiLCJpYXQiOjE1NjgxMjE0Mzl9._zZzaepxO2ddT8MELCJ4Mm6V9wvfniosg042xyFEPUE\"\r\n\r\n    var headers = {headers: {'Content-Type': 'application/json', 'Authorization': 'Bearer ' + token}}\r\n\r\n    var request = axios.get('/users/me', headers);\r\n    request.then(({data, status}) => {\r\n      if (status === 200) {\r\n        console.log(data);\r\n      }\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <BrowserRouter>\r\n          <div>\r\n            <Route exact path=\"/\" component={EntryPoint} />\r\n            <Route exact path=\"/home\" component={Landing} />\r\n          </div>\r\n        </BrowserRouter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\r\nimport reducerUser from './reducerUser';\r\nimport { reducer as reduxForm } from 'redux-form';\r\n\r\nexport default combineReducers({\r\n  user: reducerUser,\r\n  form: reduxForm\r\n});\r\n","import { SIGNUP } from \"../actions\";\r\n\r\nexport default function(state = {}, action) {\r\n  switch (action.type) {\r\n    case SIGNUP:\r\n      return {...state, token: action.payload}\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport App from './components/EntryPoint/App';\nimport * as serviceWorker from './serviceWorker';\nimport reducers from './reducers';\n\n\n//ReactDOM.render(<App />, document.getElementById('root'));\n\nconst store = createStore(reducers, {}, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n  <Provider store={store}><App /></Provider>,\n  document.querySelector('#root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}